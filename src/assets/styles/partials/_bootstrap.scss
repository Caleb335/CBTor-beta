/** @format */

/**
*  Creates the flex containers for mobile screens
*/
@for $var from 1 through 12 {
  .col-#{$var} {
    @include flexCalculator($var);
  }
}

.col {
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -ms-flex-positive: 1;
  flex-grow: 1;
  max-width: 100%;
}

/**
* Creates the padding and margin for mobile screens
*/
@each $key1, $item in $padding {
  .p-#{$key1} {
    padding: $item !important;
  }
  .py-#{$key1} {
    padding-bottom: $item !important;
    padding-top: $item !important;
  }
  .px-#{$key1} {
    padding-left: $item !important;
    padding-right: $item !important;
  }
  .pb-#{$key1} {
    padding-bottom: $item !important;
  }
  .pt-#{$key1} {
    padding-top: $item !important;
  }
  .pr-#{$key1} {
    padding-right: $item !important;
  }
  .pl-#{$key1} {
    padding-left: $item !important;
  }
  .m-#{$key1} {
    margin: $item !important;
  }
  .mb-#{$key1} {
    margin-bottom: $item !important;
  }
  .mt-#{$key1} {
    margin-top: $item !important;
  }
  .mr-#{$key1} {
    margin-right: $item !important;
  }
  .ml-#{$key1} {
    margin-left: $item !important;
  }
  .my-#{$key1} {
    margin-bottom: $item !important;
    margin-top: $item !important;
  }
  .mx-#{$key1} {
    margin-left: $item !important;
    margin-right: $item !important;
  }
}

/**
* Iterates throught the responsive variables to declare containers for each breakpoints
*/
@each $key, $val in $responsive {
  @include media-breakpoint-up($key) {
    // display properties for each breakpoint
    .d-#{$key}-flex {
      display: flex !important;
    }
    .d-#{$key}-block {
      display: block !important;
    }
    .d-#{$key}-none {
      display: none !important;
    }
    .flex-#{$key}-column {
      flex-direction: column !important;
    }
    .d-#{$key}-center {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .d-#{$key}-justify-center {
      display: flex;
      justify-content: center;
    }
    .d-#{$key}-justify-between {
      display: flex;
      justify-content: space-between !important;
    }
    .d-#{$key}-justify-end {
      display: flex;
      justify-content: flex-end;
    }
    .d-#{$key}-align-center {
      display: flex;
      align-items: center;
    }
    .d-#{$key}-align-end {
      display: flex;
      align-items: flex-end;
    }
    .d-#{$key}-align-start {
      display: flex;
      align-items: flex-start;
    }
    .text-#{$key}-center {
      text-align: center;
    }
    .text-#{$key}-left {
      text-align: left !important;
    }
    .vh-#{$key}-max {
      max-height: 100vh;
    }
    .vh-#{$key}-min {
      min-height: 100vh !important;
    }
    .col-#{$key}-option {
      width: 100%;
      flex: 0 0 ((100/12) * 2.4 * 1%);
      max-width: ((100/12) * 2.4 * 1%);
      padding-left: 1rem;
      padding-right: 1rem;
    }
    .flex-#{$key}-row {
      flex-direction: row !important;
    }

    @for $var from 1 through 12 {
      .col-#{$key}-#{$var} {
        @include flexCalculator($var);
      }
    }

    // Creates the padding and margin for each breakpoints
    @each $key1, $item in $padding {
      .p-#{$key}-#{$key1} {
        padding: $item !important;
      }
      .py-#{$key}-#{$key1} {
        padding-bottom: $item !important;
        padding-top: $item !important;
      }
      .px-#{$key}-#{$key1} {
        padding-left: $item !important;
        padding-right: $item !important;
      }
      .pb-#{$key}-#{$key1} {
        padding-bottom: $item !important;
      }
      .pt-#{$key}-#{$key1} {
        padding-top: $item !important;
      }
      .pr-#{$key}-#{$key1} {
        padding-right: $item !important;
      }
      .pl-#{$key}-#{$key1} {
        padding-left: $item !important;
      }
      .m-#{$key}-#{$key1} {
        margin: $item !important;
      }
      .mb-#{$key}-#{$key1} {
        margin-bottom: $item !important;
      }
      .mt-#{$key}-#{$key1} {
        margin-top: $item !important;
      }
      .mr-#{$key}-#{$key1} {
        margin-right: $item !important;
      }
      .ml-#{$key}-#{$key1} {
        margin-left: $item !important;
      }
      .my-#{$key}-#{$key1} {
        margin-bottom: $item !important;
        margin-top: $item !important;
      }
      .mx-#{$key}-#{$key1} {
        margin-left: $item !important;
        margin-right: $item !important;
      }
    }
  }
}

.container {
  max-width: 1300px !important;
  margin-left: auto;
  margin-right: auto;
  height: 100vh;
}

.containerless {
  max-width: 1300px !important;
  margin-left: auto;
  margin-right: auto;
}

.container-fluid {
  width: 100%;
  height: 100vh;
}

.h-100 {
  height: 100%;
}

.row {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  margin-left: -15px;
  margin-right: -15px;
}

.no-gutters {
  margin-left: 0;
  margin-right: 0;
}

.w-100 {
  width: 100%;
}

.vh-max {
  max-height: 100vh;
}

.vh-100 {
  min-height: 100vh;
}

.vw-100 {
  min-width: 100vw;
}

.d-flex {
  display: flex;
}

.flex-wrap {
  flex-wrap: wrap;
}

.d-block {
  display: block;
}

.d-none {
  display: none;
}

.flex-column {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.d-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.d-justify-center {
  display: flex;
  justify-content: center;
}

.d-justify-between {
  display: flex;
  justify-content: space-between;
}

.d-justify-end {
  display: flex;
  justify-content: flex-end;
}

.d-align-center {
  display: flex;
  align-items: center;
}

.d-align-end {
  display: flex;
  align-items: flex-end;
}

.d-align-start {
  display: flex;
  align-items: flex-start;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.position-relative {
  position: relative;
}

.position-absolute {
  position: absolute;
}

.border-radius {
  border-radius: 4px;
}

.shadow {
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06),
    0px 0px 1px rgba(0, 0, 0, 0.04);
}

.rounded-circle {
  border-radius: 50%;
}

.rounded {
  border-radius: 4px;
}

.rounded-lg {
  border-radius: 8px;
}

.ml-auto {
  margin-left: auto;
}

.mr-auto {
  margin-right: auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.table-container {
  overflow-x: auto;
}

.table {
  width: 100%;
  border-collapse: collapse;
  font-size: rem(16);
}

td,
th {
  text-align: left;
  padding: .75rem 1rem;
  border-bottom: 1px solid #dee2e6;
}

th {
  padding: 1rem 1rem;
}

td {
  color: map-get($colors, "dark-50");
  font-weight: map-get($font-weights, "light");
  font-size: rem(15);
}

tbody tr {
  &:hover {
    background: rgba($color: map-get($colors, "light"), $alpha: 0.1);
  }
  &:last-child td {
    border-bottom: none !important;
  }
}
